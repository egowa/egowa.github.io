# Hugo 사이트를 GitHub Pages에 배포하는 워크플로우
name: Deploy Hugo site to Pages

on:
  # main 브랜치에 push할 때마다 실행
  push:
    branches: ["main"]
  
  # 수동으로도 실행 가능
  workflow_dispatch:

# GitHub Pages에 배포하기 위한 권한 설정
permissions:
  contents: read
  pages: write
  id-token: write

# 동시에 여러 배포가 실행되지 않도록 제한
concurrency:
  group: "pages"
  cancel-in-progress: false

# 기본 쉘 설정
defaults:
  run:
    shell: bash

jobs:
  # 빌드 작업
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. 소스 코드 체크아웃 (submodule 포함)
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive  # 테마 submodule도 함께 가져오기

      # 2. Hugo 설치
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'
          extended: true  # Hugo Extended 버전 사용

      # 3. GitHub Pages 설정
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4

      # 4. Hugo로 사이트 빌드
      - name: Build with Hugo
        env:
          # 프로덕션 환경 설정
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      # 5. 빌드 결과물을 GitHub Pages용 아티팩트로 업로드
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./public

  # 배포 작업
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build  # build 작업 완료 후 실행
    steps:
      # 6. GitHub Pages에 배포
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v3
